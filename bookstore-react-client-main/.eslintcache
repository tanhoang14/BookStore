[{"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\index.js":"1","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\App.js":"2","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reportWebVitals.js":"3","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\store.js":"4","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Layout\\RouteComponent.js":"5","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\index.js":"6","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Layout\\SiderComponent.js":"7","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Layout\\HeaderComponent.js":"8","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\PrivateRoutes.js":"9","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\history.js":"10","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\ActionTypes.js":"11","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\security\\setJwt.js":"12","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\securityActions.js":"13","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\errorReducer.js":"14","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\billingReducer.js":"15","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\ordersReducer.js":"16","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\shoppingCartReducer.js":"17","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\shippingReducer.js":"18","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\securityReducer.js":"19","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\bookReducer.js":"20","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\PublicRoutes.js":"21","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\AllowedRoutes.js":"22","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\MapAllowedRoutes.js":"23","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\PrivateRoutesConfig.js":"24","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\APIConfig.js":"25","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Home.js":"26","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\UserManagement\\Login.js":"27","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\UserManagement\\SignUp.js":"28","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Payment.js":"29","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\ShoppingCart.js":"30","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Order\\OrderList.js":"31","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Profile.js":"32","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Checkout\\Checkout.js":"33","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Shipping\\AddShippingAddress.js":"34","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Shipping\\UpdateShippingAddress.js":"35","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Shipping\\ShippingAddressList.js":"36","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Billing\\CreditCardList.js":"37","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Billing\\UpdateCreditCard.js":"38","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Billing\\AddCreditCard.js":"39","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Book\\BookInfo.js":"40","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Book\\BookList.js":"41","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\security\\Roles.js":"42","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Admin\\Book\\AddBook.js":"43","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Admin\\Book\\BookList.js":"44","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Admin\\Book\\UpdateBook.js":"45","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\OrderActions.js":"46","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\ShoppingCartActions.js":"47","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\ShippingActions.js":"48","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\MatchRouteParams.js":"49","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\common\\GetImage.js":"50","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\UI\\SelectOptionsUtil.js":"51","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\UI\\UI_Constants.js":"52","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\BillingActions.js":"53","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\bookActions.js":"54","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\UI\\ImageUtils.js":"55","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\common\\message.js":"56","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Checkout\\PlaceOrder.js":"57","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Checkout\\PaymentInformation.js":"58","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Checkout\\ShippingAddress.js":"59"},{"size":500,"mtime":1614710779323,"results":"60","hashOfConfig":"61"},{"size":407,"mtime":1620096645192,"results":"62","hashOfConfig":"61"},{"size":362,"mtime":499162500000,"results":"63","hashOfConfig":"61"},{"size":323,"mtime":1619941733448,"results":"64","hashOfConfig":"61"},{"size":1811,"mtime":1619763147385,"results":"65","hashOfConfig":"61"},{"size":625,"mtime":1613726580998,"results":"66","hashOfConfig":"61"},{"size":2684,"mtime":1614713161460,"results":"67","hashOfConfig":"61"},{"size":3305,"mtime":1619763815766,"results":"68","hashOfConfig":"61"},{"size":1364,"mtime":1620463671532,"results":"69","hashOfConfig":"61"},{"size":91,"mtime":1620464028809,"results":"70","hashOfConfig":"61"},{"size":914,"mtime":1613726232524,"results":"71","hashOfConfig":"61"},{"size":256,"mtime":1612554055417,"results":"72","hashOfConfig":"61"},{"size":1508,"mtime":1620479570987,"results":"73","hashOfConfig":"61"},{"size":424,"mtime":1620479586714,"results":"74","hashOfConfig":"61"},{"size":1146,"mtime":1613653850441,"results":"75","hashOfConfig":"61"},{"size":425,"mtime":1613726584628,"results":"76","hashOfConfig":"61"},{"size":753,"mtime":1613567647410,"results":"77","hashOfConfig":"61"},{"size":1260,"mtime":1613666294904,"results":"78","hashOfConfig":"61"},{"size":644,"mtime":1613567602779,"results":"79","hashOfConfig":"61"},{"size":870,"mtime":1613567540895,"results":"80","hashOfConfig":"61"},{"size":380,"mtime":1619732439286,"results":"81","hashOfConfig":"61"},{"size":652,"mtime":1620462391712,"results":"82","hashOfConfig":"61"},{"size":1170,"mtime":1615322154016,"results":"83","hashOfConfig":"61"},{"size":3128,"mtime":1614704398422,"results":"84","hashOfConfig":"61"},{"size":2837,"mtime":1614704072601,"results":"85","hashOfConfig":"61"},{"size":2538,"mtime":1614713382346,"results":"86","hashOfConfig":"61"},{"size":1702,"mtime":1620479753237,"results":"87","hashOfConfig":"61"},{"size":4020,"mtime":1620476755234,"results":"88","hashOfConfig":"61"},{"size":433,"mtime":1613674691143,"results":"89","hashOfConfig":"61"},{"size":2646,"mtime":1614713336737,"results":"90","hashOfConfig":"61"},{"size":1375,"mtime":1613735460766,"results":"91","hashOfConfig":"61"},{"size":607,"mtime":1614713336734,"results":"92","hashOfConfig":"61"},{"size":664,"mtime":1613674766095,"results":"93","hashOfConfig":"61"},{"size":2491,"mtime":1613667302644,"results":"94","hashOfConfig":"61"},{"size":3064,"mtime":1613741635013,"results":"95","hashOfConfig":"61"},{"size":3786,"mtime":1614713336737,"results":"96","hashOfConfig":"61"},{"size":3421,"mtime":1614713241502,"results":"97","hashOfConfig":"61"},{"size":5498,"mtime":1613662462109,"results":"98","hashOfConfig":"61"},{"size":3626,"mtime":1615322153980,"results":"99","hashOfConfig":"61"},{"size":3974,"mtime":1614713241501,"results":"100","hashOfConfig":"61"},{"size":1769,"mtime":1614709561118,"results":"101","hashOfConfig":"61"},{"size":80,"mtime":1613496059707,"results":"102","hashOfConfig":"61"},{"size":5604,"mtime":1620471471347,"results":"103","hashOfConfig":"61"},{"size":3150,"mtime":1620393342988,"results":"104","hashOfConfig":"61"},{"size":7011,"mtime":1615322153969,"results":"105","hashOfConfig":"61"},{"size":681,"mtime":1613732976707,"results":"106","hashOfConfig":"61"},{"size":1100,"mtime":1614712874923,"results":"107","hashOfConfig":"61"},{"size":2554,"mtime":1614712868627,"results":"108","hashOfConfig":"61"},{"size":230,"mtime":1613587446052,"results":"109","hashOfConfig":"61"},{"size":739,"mtime":1620391306971,"results":"110","hashOfConfig":"61"},{"size":292,"mtime":1612969612118,"results":"111","hashOfConfig":"61"},{"size":509,"mtime":1614706386822,"results":"112","hashOfConfig":"61"},{"size":2222,"mtime":1615322153969,"results":"113","hashOfConfig":"61"},{"size":1640,"mtime":1613648096769,"results":"114","hashOfConfig":"61"},{"size":198,"mtime":1613585146586,"results":"115","hashOfConfig":"61"},{"size":194,"mtime":1613639595478,"results":"116","hashOfConfig":"61"},{"size":672,"mtime":1613765939673,"results":"117","hashOfConfig":"61"},{"size":2167,"mtime":1613692379843,"results":"118","hashOfConfig":"61"},{"size":2023,"mtime":1613576447683,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"fsh45t",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"122"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"122"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"122"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"122"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"122"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"266"},"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\index.js",[],["267","268"],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\App.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reportWebVitals.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\store.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Layout\\RouteComponent.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\index.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Layout\\SiderComponent.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Layout\\HeaderComponent.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\PrivateRoutes.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\history.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\ActionTypes.js",["269"],"export default {\r\n    GET_ERRORS: 'GET_ERRORS',\r\n    SET_CURRENT_USER: 'SET_CURRENT_USER',\r\n    GET_BOOK_LIST: 'GET_BOOK_LIST',\r\n    GET_BOOK_DETAIL: 'GET_BOOK_DETAIL',\r\n    DELETE_BOOK: 'DELETE_BOOK',\r\n    NewCardAndUserBilling: 'NewCardAndUserBilling',\r\n    GET_CREDIT_CARD_LIST: 'GET_CREDIT_CARD_LIST',\r\n    DELETE_CARD: 'DELETE_CARD',\r\n    GET_CARD_DETAIL: 'GET_CARD_DETAIL',\r\n    GET_DEFAULT_CARD: 'GET_DEFAULT_CARD',\r\n    NEW_USER_SHIPPING: 'NEW_USER_SHIPPING',\r\n    GET_USER_SHIPPINGS: 'GET_USER_SHIPPINGS',\r\n    GET_SHIPPING_INFO: 'GET_SHIPPING_INFO',\r\n    UPDATE_USER_SHIPPING: 'UPDATE_USER_SHIPPING',\r\n    DELETE_USER_SHIPPING_ADDRESS: 'DELETE_USER_SHIPPING_ADDRESS',\r\n    GET_DEFAULT_USER_SHIPPING: 'GET_DEFAULT_USER_SHIPPING',\r\n    Add_BOOK_TO_CART_ITEM: 'Add_BOOK_TO_CART_ITEM',\r\n    GET_SHOPPING_CART_ITEMS: 'GET_SHOPPING_CART_ITEMS',\r\n    DELETE_ITEM: 'DELETE_ITEM',\r\n    GET_ORDERS: 'GET_ORDERS'\r\n}","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\security\\setJwt.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\securityActions.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\billingReducer.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\ordersReducer.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\shoppingCartReducer.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\shippingReducer.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\securityReducer.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\reducers\\bookReducer.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\PublicRoutes.js",["270"],"import Home from '../../components/Home';\r\nimport Login from '../../components/UserManagement/Login';\r\nimport SignUp from '../../components/UserManagement/SignUp';\r\n\r\nexport default [\r\n\t{\r\n\t\tcomponent: Home,\r\n\t\tpath: '',\r\n\t\ttitle: '',\r\n\t\texact: true\r\n\t},\r\n\t{\r\n\t\tcomponent: Login,\r\n\t\tpath: 'login',\r\n\t\ttitle: ''\r\n\t},\r\n\t{\r\n\t\tcomponent: SignUp,\r\n\t\tpath: 'signup',\r\n\t\ttitle: ''\r\n\t}\r\n]","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\AllowedRoutes.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\MapAllowedRoutes.js",["271"],"import React, { memo } from 'react';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\n// import { NotFound } from 'components/common';\r\n\r\nconst MapAllowedRoutes = (props) => {\r\n\r\n    const { routes, basePath, isAddNotFound } = props\r\n    const match = useRouteMatch(basePath);\r\n\r\n\r\n    return (\r\n        <Switch>\r\n            {routes.map((route) => {\r\n\r\n                const {\r\n                    path,\r\n                    component: Component,\r\n                    children,\r\n                    title,\r\n                    permission,\r\n                    ...rest\r\n                } = route;\r\n                return (\r\n                    <Route\r\n                        {...rest}\r\n                        key={path}\r\n                        path={`${match.path}${path}`}\r\n                    // render={props => <Component children={children} {...props} />}\r\n\r\n                    >\r\n                        <Component children={children} />\r\n                    </Route>\r\n                )\r\n            })}\r\n            {/* {isAddNotFound && <Route><NotFound /></Route>} */}\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default memo(MapAllowedRoutes);","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\PrivateRoutesConfig.js",["272"],"import Roles from '../security/Roles'\r\n\r\nimport AddBook from '../../components/Admin/Book/AddBook'\r\nimport BookList from '../../components/Admin/Book/BookList'\r\nimport UserBookList from '../../components/User/Book/BookList'\r\nimport UpdateBook from '../../components/Admin/Book/UpdateBook'\r\n\r\nimport BookInfo from '../../components/User/Book/BookInfo'\r\nimport AddCreditCard from '../../components/User/Profile/Billing/AddCreditCard'\r\nimport CreditCardList from '../../components/User/Profile/Billing/CreditCardList'\r\nimport UpdateCreditCard from '../../components/User/Profile/Billing/UpdateCreditCard'\r\nimport AddShippingAddress from '../../components/User/Profile/Shipping/AddShippingAddress'\r\nimport ShippingAddressList from '../../components/User/Profile/Shipping/ShippingAddressList'\r\nimport UpdateShippingAddress from '../../components/User/Profile/Shipping/UpdateShippingAddress'\r\nimport ShoppingCart from '../../components/User/ShoppingCart'\r\nimport Checkout from '../../components/User/Checkout/Checkout'\r\nimport Profile from '../../components/User/Profile/Profile'\r\nimport Payment from '../../components/User/Payment'\r\nimport Home from '../../components/Home';\r\nimport OrderList from '../../components/User/Profile/Order/OrderList'\r\n\r\nexport default [\r\n    {\r\n        component: AddBook,\r\n        path: 'addbook',\r\n        title: '',\r\n        exact: true,\r\n        permission: [\r\n            Roles.Role_ADMIN,\r\n        ]\r\n    },\r\n    {\r\n        component: BookList,\r\n        path: 'booklist',\r\n        title: '',\r\n        permission: [\r\n            Roles.Role_ADMIN,\r\n        ]\r\n    },\r\n    {\r\n        component: UpdateBook,\r\n        path: 'updatebook/:id',\r\n        title: '',\r\n        permission: [\r\n            Roles.Role_ADMIN,\r\n        ]\r\n    },\r\n    {\r\n        component: UserBookList,\r\n        path: 'books',\r\n        title: ''\r\n    },\r\n    {\r\n        component: BookInfo,\r\n        path: 'bookdetail/:id',\r\n        title: ''\r\n    },\r\n    {\r\n        component: AddCreditCard,\r\n        path: 'AddCreditCard',\r\n        title: ''\r\n    },\r\n    {\r\n        component: CreditCardList,\r\n        path: 'cardlist',\r\n        title: ''\r\n    },\r\n    {\r\n        component: UpdateCreditCard,\r\n        path: 'updatecardinfo/:id',\r\n        title: ''\r\n    },\r\n    {\r\n        component: AddShippingAddress,\r\n        path: 'AddUserShipping',\r\n        title: ''\r\n    },\r\n    {\r\n        component: ShippingAddressList,\r\n        path: 'ShippingList',\r\n        title: ''\r\n    },\r\n    {\r\n        component: UpdateShippingAddress,\r\n        path: 'UpdateUserShipping/:id',\r\n        title: ''\r\n    },\r\n    {\r\n        component: ShoppingCart,\r\n        path: 'shoppingCart',\r\n        title: ''\r\n    },\r\n    {\r\n        component: Checkout,\r\n        path: 'checkout',\r\n        title: ''\r\n    },\r\n    {\r\n        component: Profile,\r\n        path: 'profile',\r\n        title: ''\r\n    },\r\n    {\r\n        component: Payment,\r\n        path: 'payment',\r\n        title: ''\r\n    },\r\n    {\r\n        component: OrderList,\r\n        path: 'orders',\r\n        title: ''\r\n    },\r\n    {\r\n        component: Home,\r\n        path: '',\r\n        title: ''\r\n    }\r\n\r\n]","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\APIConfig.js",["273"],"const Base = 'http://localhost:8080/'\r\n\r\nconst USERS_URL = 'api/users/'\r\nconst SIGNUP_URL = Base + USERS_URL + 'signup'\r\nconst LOGIN_URL = Base + USERS_URL + 'login'\r\n\r\nconst BOOK_URL = Base + 'book/'\r\nconst USER_BOOK_URL = Base + 'userBook/'\r\nconst CREATE_BOOK_URL = BOOK_URL + 'add'\r\nconst GET_BOOKS_URL = USER_BOOK_URL + 'booklist'\r\nconst DELETE_BOOK_URL = BOOK_URL + 'deletebook/'\r\nconst BOOK_IMAGE_URL = USER_BOOK_URL + 'getimage/'\r\nconst BOOK_DETAIL_URL = USER_BOOK_URL + 'bookinfo/'\r\n\r\nconst CREDIT_CARD_BILLING_URL = Base + 'creditcard/'\r\nconst ADD_CARD_URL = CREDIT_CARD_BILLING_URL + 'addNewCreditCard/'\r\nconst CARD_LIST_URL = CREDIT_CARD_BILLING_URL + 'creditcardlist/'\r\nconst DELETE_CARD_URL = CREDIT_CARD_BILLING_URL + 'deletecard/'\r\nconst CARD_DETAIL_URL = CREDIT_CARD_BILLING_URL + 'cardinfo/'\r\nconst UPDATE_CARD_URL = CREDIT_CARD_BILLING_URL + 'updatecard/'\r\nconst GET_DEFAULT_CARD_URL = CREDIT_CARD_BILLING_URL + 'defaultCard/'\r\nconst SET_DEFAULT_CARD_URL = CREDIT_CARD_BILLING_URL + 'setDefaultCard/'\r\n\r\nconst USER_SHIPPING_URL = Base + 'shipping/'\r\nconst ADD_USHIPPING_URL = USER_SHIPPING_URL + 'addNewUserShippingAddress/'\r\nconst GET_USER_SHIPPINGS_URL = USER_SHIPPING_URL + 'usershippinglist/'\r\nconst USER_SHIPPING_DETAIL_URL = USER_SHIPPING_URL + 'shippingInfo/'\r\nconst UPDATE_USER_SHIPPING_URL = USER_SHIPPING_URL + 'updateUserShippingAddress/'\r\nconst DELETE_USER_SHIPPING_URL = USER_SHIPPING_URL + 'deleteUserShipping/'\r\nconst GET_DEFAULT_USER_SHIPPING_URL = USER_SHIPPING_URL + 'defaultUserShipping/'\r\nconst SET_DEFAULT_USER_SHIPPING_URL = USER_SHIPPING_URL + 'setDefaultUserShipping/'\r\n\r\n\r\nconst SHOPPING_CART_URL = Base + 'shoppingCart/'\r\nconst Add_BOOK_TO_CART_ITEM_URL = SHOPPING_CART_URL + 'addItem/'\r\nconst GET_SHOPPING_CART_ITEMS_URL = SHOPPING_CART_URL + 'shoppingCart/'\r\nconst DELETE_ITEM_URL = SHOPPING_CART_URL + 'deleteItem/'\r\n\r\nconst CHECKOUT_URL = Base + 'checkout/'\r\nconst CREATE_ORDER_URL = CHECKOUT_URL + 'createOrder/'\r\nconst GET_ORDERS_URL = CHECKOUT_URL + 'getOrders/'\r\n\r\nexport default {\r\n    Base,\r\n\r\n    USERS_URL,\r\n    SIGNUP_URL,\r\n    LOGIN_URL,\r\n\r\n    BOOK_URL,\r\n    CREATE_BOOK_URL,\r\n    GET_BOOKS_URL,\r\n    DELETE_BOOK_URL,\r\n    BOOK_IMAGE_URL,\r\n    BOOK_DETAIL_URL,\r\n\r\n    CREDIT_CARD_BILLING_URL,\r\n    ADD_CARD_URL,\r\n    CARD_LIST_URL,\r\n    DELETE_CARD_URL,\r\n    CARD_DETAIL_URL,\r\n    UPDATE_CARD_URL,\r\n    GET_DEFAULT_CARD_URL,\r\n    SET_DEFAULT_CARD_URL,\r\n\r\n    USER_SHIPPING_URL,\r\n    ADD_USHIPPING_URL,\r\n    GET_USER_SHIPPINGS_URL,\r\n    USER_SHIPPING_DETAIL_URL,\r\n    UPDATE_USER_SHIPPING_URL,\r\n    DELETE_USER_SHIPPING_URL,\r\n    GET_DEFAULT_USER_SHIPPING_URL,\r\n    SET_DEFAULT_USER_SHIPPING_URL,\r\n\r\n    SHOPPING_CART_URL,\r\n    Add_BOOK_TO_CART_ITEM_URL,\r\n    GET_SHOPPING_CART_ITEMS_URL,\r\n    DELETE_ITEM_URL,\r\n\r\n    CHECKOUT_URL,\r\n    CREATE_ORDER_URL,\r\n    GET_ORDERS_URL\r\n}\r\n","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Home.js",["274"],"import { Layout, Row, Col, Carousel, Divider, Image, Card } from 'antd'\r\nimport '../App.css';\r\nimport libimg from '../assets/images/lib.jpg'\r\nimport libimg2 from '../assets/images/lib2.jpg'\r\nimport best_seller from '../assets/images/best_seller.png'\r\nimport directions from '../assets/images/directions.png'\r\nimport faq from '../assets/images/faq.png'\r\n\r\nconst Home = () => {\r\n    const { Content } = Layout;\r\n\r\n    const contentStyle = {\r\n        height: '250px',\r\n        color: '#fff',\r\n        lineHeight: '160px',\r\n        textAlign: 'center',\r\n        background: '#364d79'\r\n    }\r\n    const cardImageStyle = {\r\n        height: '200px'\r\n    }\r\n\r\n    return (\r\n        <Content>\r\n            <Row justify='space-around'>\r\n                <Col span={24}>\r\n                    <Carousel autoplay className='carousel'>\r\n                        {/* <div style={contentStyle}>\r\n                            <Image style={contentStyle} src={libimg3} />\r\n                        </div> */}\r\n                        <div>\r\n                            <Image style={contentStyle} src={libimg2} width='100%' />\r\n                        </div>\r\n                        <div>\r\n                            <Image style={contentStyle} src={libimg} />\r\n                        </div>\r\n                    </Carousel>\r\n                </Col>\r\n                {/* <Col span={8}>\r\n                    <Image style={contentStyle} src={logo} />\r\n                </Col> */}\r\n            </Row>\r\n            <Row justify='space-around'>\r\n                <Col span={22}>\r\n                    <Divider className='divider'></Divider>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row justify='space-around' className='center'>\r\n                <Col span={6}>\r\n                    <figure>\r\n                        <Image style={cardImageStyle} src={best_seller} />\r\n                        <figcaption>BEST SELLER</figcaption>\r\n                    </figure>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <figure>\r\n                        <Image style={cardImageStyle} src={directions} />\r\n                        <figcaption>DIRECTIONS</figcaption>\r\n                    </figure>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <figure>\r\n                        <Image style={cardImageStyle} src={faq} />\r\n                        <figcaption>FAQ</figcaption>\r\n                    </figure>\r\n                </Col>\r\n            </Row>\r\n        </Content>\r\n    )\r\n}\r\nexport default Home;","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\UserManagement\\Login.js",["275"],"import { Form, Input, Button } from \"antd\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nconst Login = (props) => {\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const security = useSelector((state) => state.security);\r\n  const error = useSelector((state) => state.error);\r\n    \r\n  useEffect(() => {\r\n    if (security.validToken) {\r\n      props.history.push(\"/\");\r\n    }\r\n    \r\n  }, [security.validToken]);\r\n\r\n  const handleSubmit = () => {\r\n    form.validateFields().then((values) => {\r\n      dispatch(login(values));\r\n    });\r\n  };\r\n  return (\r\n    <Form\r\n      className=\"custom-form\"\r\n      form={form}\r\n      onFinish={handleSubmit}\r\n      wrapperCol={{ span: 8 }}\r\n      labelCol={{ span: 8 }}\r\n    >\r\n    <div className=\"form\">{(error.errors.username && error.errors.password) && <p>Invalid username or password</p>} </div>\r\n      <Form.Item\r\n        name=\"username\"\r\n        label=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"This field is required!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"This field is required!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password></Input.Password>\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ offset: 8 }}>\r\n        <Button htmlType=\"submit\" type=\"primary\">\r\n          Login\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\UserManagement\\SignUp.js",["276"],"import { Form, Input, Button } from \"antd\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\n\r\nconst SignUp = (props) => {\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const security = useSelector((state) => state.security);\r\n\r\n  useEffect(() => {\r\n    if (security.validToken) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n  var phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\n  const handleSubmit = () => {\r\n    form.validateFields().then((values) => {\r\n      dispatch(createNewUser(values, history));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      className=\"custom-form\"\r\n      form={form}\r\n      onFinish={handleSubmit}\r\n      wrapperCol={{ span: 8 }}\r\n      labelCol={{ span: 8 }}\r\n    >\r\n      <Form.Item\r\n        name=\"username\"\r\n        label=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"This field is required!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"email\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"This field is required!\",\r\n          },\r\n          {\r\n            type: \"email\",\r\n            message: \"The input is not valid E-mail!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"firstname\"\r\n        label=\"firstname\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"This field is required!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"lastname\"\r\n        label=\"lastname\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"This field is required!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input></Input>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"phone\"\r\n        label=\"phone\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"This field is required!\",\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || phoneRegex.test(value)) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject(\r\n                new Error(\"This is not a valid phone number !\")\r\n              );\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"This field is required!\",\r\n          },\r\n          {\r\n            min: 5,\r\n            message: \"5 characters at least\",\r\n          },\r\n          {\r\n            max: 10,\r\n            message: \"10 characters at most\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password></Input.Password>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"confirm\"\r\n        dependencies={[\"password\"]}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"This field is required!\",\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue(\"password\") === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject(\r\n                new Error(\"The two passwords that you entered do not match!\")\r\n              );\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password></Input.Password>\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ offset: 8 }}>\r\n        <Button htmlType=\"submit\" type=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default SignUp;\r\n","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Payment.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\ShoppingCart.js",["277","278"],"import { Table, Empty, Space, Button, Popconfirm } from 'antd'\r\nimport { EditTwoTone, DeleteFilled } from '@ant-design/icons'\r\nimport GetImage from '../common/GetImage'\r\n\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getShoppingCart, removeItem } from '../../actions/ShoppingCartActions'\r\n\r\nconst ShoppingCart = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const shoppingCart = useSelector(state => state.shoppingCart.shoppingCart)\r\n\r\n    useEffect(() => {\r\n        dispatch(getShoppingCart());\r\n    }, [])\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '',\r\n            dataIndex: '',\r\n            render: (text, record) => {\r\n                return (<GetImage id={record.book.id} width='100px' height='100px'></GetImage>)\r\n            }\r\n        },\r\n        {\r\n            title: 'book title',\r\n            dataIndex: 'book.title',\r\n            render: (text, record) => {\r\n                return record.book.title\r\n            }\r\n        },\r\n        {\r\n            title: 'category',\r\n            dataIndex: 'book.category',\r\n            render: (text, record) => {\r\n                return record.book.category\r\n            }\r\n        },\r\n        {\r\n            title: 'language',\r\n            dataIndex: 'book.language',\r\n            render: (text, record) => {\r\n                return record.book.language\r\n            }\r\n        },\r\n        {\r\n            title: 'price',\r\n            dataIndex: 'book.ourPrice',\r\n            render: (text, record) => {\r\n                return record.book.ourPrice\r\n            }\r\n        },\r\n        {\r\n            title: 'qty',\r\n            dataIndex: 'qty',\r\n            render: (text, record) => {\r\n                return record.qty\r\n            }\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            render: (text, record) => {\r\n                return (\r\n                    <Space>\r\n                        <Button icon={<EditTwoTone />}></Button>\r\n                        <Popconfirm title={'Are you sure to delete this item'} onConfirm={() => { handleDelete(record.id) }}>\r\n                            <Button icon={<DeleteFilled />} danger></Button>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    let table = (Object.keys(shoppingCart).length != 0) ? <Table dataSource={shoppingCart} columns={columns} rowKey='id'></Table> : <Empty />\r\n\r\n    return (\r\n        table\r\n    )\r\n}\r\n\r\nexport default ShoppingCart;","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Order\\OrderList.js",["279","280"],"import { Table, Empty, Row, Col } from 'antd'\r\n\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getOrders } from '../../../../actions/OrderActions'\r\n\r\nconst OrderList = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const orders = useSelector(state => state.orders.orders)\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrders());\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Order Date',\r\n            dataIndex: 'orderDate',\r\n            render: (text, record) => {\r\n                return String(record.orderDate).split('T')[0]\r\n            }\r\n        },\r\n        {\r\n            title: 'Shipping Method',\r\n            dataIndex: 'shippingMethod',\r\n            key: 'shippingMethod'\r\n        },\r\n        {\r\n            title: 'Total',\r\n            dataIndex: 'orderTotal',\r\n            key: 'orderTotal'\r\n        },\r\n        {\r\n            title: 'Order Status',\r\n            dataIndex: 'orderStatus',\r\n            key: 'orderStatus'\r\n        },\r\n    ]\r\n\r\n    let table = (Object.keys(orders).length != 0) ? <Table justify='centered' dataSource={orders} columns={columns} rowKey='id'></Table> : <Empty />\r\n\r\n    return (\r\n        <Row justify='space-around'>\r\n            <Col span={22}>\r\n                {table}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default OrderList;","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Profile.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Checkout\\Checkout.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Shipping\\AddShippingAddress.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Shipping\\UpdateShippingAddress.js",["281","282"],"import { Layout, Form, Typography, Input, Select, Space, Divider, Row, Col, Button } from 'antd'\r\n\r\nimport Options from '../../../../utils/UI/UI_Constants'\r\nimport getOptions from '../../../../utils/UI/SelectOptionsUtil'\r\n\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MatchParams from '../../../../utils/route/MatchRouteParams'\r\n\r\nimport { getUserShippingInfo, updateUserShippingInfo } from '../../../../actions/ShippingActions'\r\n\r\nconst UpdateShippingAddress = (props) => {\r\n\r\n    let history = useHistory()\r\n    const match = MatchParams(history, '/UpdateUserShipping/:id')\r\n    const { id } = match.params\r\n    const dispatch = useDispatch()\r\n    const [form] = Form.useForm()\r\n    const { Title } = Typography\r\n    const { Content } = Layout\r\n    const { USstates } = Options\r\n    const shippingInfo = useSelector(state => state.userShippings.shippingInfo)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserShippingInfo(id))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n    }, [shippingInfo])\r\n\r\n    const handleSubmit = () => {\r\n        form.validateFields().then(values => {\r\n            values.id = shippingInfo.id\r\n            dispatch(updateUserShippingInfo(values, history))\r\n        })\r\n    }\r\n    const handleCancel = () => {\r\n        history.push('/ShippingList')\r\n    }\r\n\r\n    return (\r\n        <Content>\r\n            <Form form={form} layout='vertical' wrapperCol={{ span: 24 }} onFinish={handleSubmit} initialValues={shippingInfo}>\r\n                <Row justify='space-around'>\r\n                    <Col span={8}>\r\n                        <Divider orientation='center'><Title level={5}>Update Shipping Address</Title></Divider>\r\n                        <Form.Item name='userShippingName' label='Name'><Input placeholder='Reciever Name'></Input></Form.Item>\r\n                        <Form.Item name='userShippingStreet1' label='Street Address'><Input placeholder='Street Address 1'></Input></Form.Item>\r\n                        <Form.Item name='userShippingStreet2' label=''><Input placeholder='Street Address 2'></Input></Form.Item>\r\n                        <Space>\r\n                            <Form.Item name='userShippingCity' label='Your City'><Input placeholder='Shipping City'></Input></Form.Item>\r\n                            <Form.Item name='userShippingState' label='State'><Select placeholder='Select State'>{getOptions(USstates)}</Select></Form.Item>\r\n                        </Space>\r\n                        <Form.Item name='userShippingZipcode' label='Zipcode'><Input placeholder='zipcode'></Input></Form.Item>\r\n                        <Space>\r\n                            <Button htmlType='submit' type='primary'>Submit</Button>\r\n                            <Button htmlType='button' type='dashed' onClick={handleCancel}>Cancel</Button>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Content>\r\n    )\r\n}\r\nexport default UpdateShippingAddress","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Shipping\\ShippingAddressList.js",["283","284","285"],"import { Button, Empty, Popconfirm, Space, Table } from 'antd'\r\nimport { EditTwoTone, DeleteFilled } from '@ant-design/icons'\r\n\r\nimport { useEffect, useState, Fragment } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getUserShipping, deleteUserShipping, setDefaultUserShipping } from '../../../../actions/ShippingActions'\r\n\r\n\r\nconst ShippingAddressList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserShipping())\r\n    }, [])\r\n\r\n    const dataSource = useSelector(state => state.userShippings.userShippings)\r\n    const defaultShipping = useSelector(state => state.userShippings.defaultShipping)\r\n    const [state, setState] = useState({ selectedRowKeys: [], })\r\n    let selectedRowKeys;\r\n\r\n    useEffect(() => {\r\n        if (defaultShipping) {\r\n            selectedRowKeys = [defaultShipping.id]\r\n            setState({ selectedRowKeys })\r\n        }\r\n\r\n    }, [defaultShipping])\r\n\r\n    const selectRow = (record) => {\r\n        selectedRowKeys = []\r\n\r\n        if (selectedRowKeys.indexOf(record.key) >= 0) {\r\n            selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1);\r\n        } else {\r\n            selectedRowKeys.push(record.key);\r\n        }\r\n        setState({ selectedRowKeys });\r\n    }\r\n    const onSelectedRowKeysChange = (selectedRowKeys) => {\r\n        setState({ selectedRowKeys });\r\n    }\r\n\r\n    const handleSetDefaultShipping = () => {\r\n        if (state.selectedRowKeys[0] != null)\r\n            dispatch(setDefaultUserShipping(state.selectedRowKeys[0]))\r\n    }\r\n\r\n    const rowSelection = {\r\n        columnTitle: (<Button className='btn' type='ghost' onClick={handleSetDefaultShipping}>Set Default Shipping</Button>),\r\n        type: 'radio',\r\n        selectedRowKeys: state.selectedRowKeys,\r\n        onChange: onSelectedRowKeysChange,\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(deleteUserShipping(id))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'userShippingName',\r\n            key: 'userShippingName'\r\n        },\r\n        {\r\n            title: 'street 1',\r\n            dataIndex: 'userShippingStreet1',\r\n            key: 'userShippingStreet1'\r\n        },\r\n        {\r\n            title: 'city',\r\n            dataIndex: 'userShippingCity',\r\n            key: 'userShippingCity'\r\n        },\r\n        {\r\n            title: 'state',\r\n            dataIndex: 'userShippingState',\r\n            key: 'userShippingState'\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            render: (text, record) => {\r\n                return (\r\n                    <Space>\r\n                        <Link to={`/UpdateUserShipping/${record.id}`}><Button icon={<EditTwoTone />}></Button></Link>\r\n                        <Popconfirm title={`Are you sure to delete Shipping Addres ${record.userShippingStreet1}, ${record.userShippingCity}, ${record.userShippingState} ?`} onConfirm={() => { handleDelete(record.id) }}>\r\n                            <Button icon={<DeleteFilled />} danger></Button>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    let table = (Object.keys(dataSource).length != 0) ? <Table dataSource={dataSource} columns={columns} rowSelection={rowSelection} rowKey='id' onRow={(record) => ({\r\n        onClick: () => {\r\n            selectRow(record);\r\n        },\r\n    })}>\r\n    </Table> : <Empty />\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to={'/AddUserShipping'}><Button className='btn' type='primary'>Add Shipping Address</Button></Link>\r\n            {table}\r\n        </Fragment>\r\n\r\n    )\r\n}\r\nexport default ShippingAddressList","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Billing\\CreditCardList.js",["286","287","288"],"import { Button, Empty, Popconfirm, Space, Table } from 'antd'\r\nimport { EditTwoTone, DeleteFilled } from '@ant-design/icons'\r\n\r\nimport { useEffect, useState, Fragment } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { cardList, deletCard, setDefaultCard } from '../../../../actions/BillingActions'\r\n\r\n\r\nconst CreditCardList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const dataSource = useSelector(state => state.cards.cards)\r\n    const defaultCard = useSelector(state => state.cards.defaultCard)\r\n    const [state, setState] = useState({ selectedRowKeys: [], })\r\n    let selectedRowKeys;\r\n\r\n    useEffect(() => {\r\n        dispatch(cardList())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (defaultCard) {\r\n            selectedRowKeys = [defaultCard.id]\r\n            setState({ selectedRowKeys })\r\n        }\r\n    }, [defaultCard])\r\n\r\n\r\n\r\n    const selectRow = (record) => {\r\n        selectedRowKeys = []\r\n\r\n        if (selectedRowKeys.indexOf(record.key) >= 0) {\r\n            selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1);\r\n        } else {\r\n            selectedRowKeys.push(record.key);\r\n        }\r\n        setState({ selectedRowKeys });\r\n    }\r\n    const onSelectedRowKeysChange = (selectedRowKeys) => {\r\n        setState({ selectedRowKeys });\r\n    }\r\n\r\n    const handleSetDefaultCard = () => {\r\n        if (state.selectedRowKeys[0] != null)\r\n            dispatch(setDefaultCard(state.selectedRowKeys[0]))\r\n    }\r\n\r\n    const rowSelection = {\r\n        columnTitle: (<Button className='btn' type='ghost' onClick={handleSetDefaultCard}>Set Default Card</Button>),\r\n        type: 'radio',\r\n        selectedRowKeys: state.selectedRowKeys,\r\n        onChange: onSelectedRowKeysChange,\r\n    };\r\n\r\n    const handleDeleteCreditCard = (id) => {\r\n        dispatch(deletCard(id))\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Credit Card',\r\n            dataIndex: 'cardName',\r\n            key: 'cardName'\r\n        },\r\n        {\r\n            title: 'cardNumber',\r\n            dataIndex: 'cardNumber',\r\n            key: 'cardNumber'\r\n        },\r\n        {\r\n            title: 'type',\r\n            dataIndex: 'type',\r\n            key: 'type'\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            render: (text, record) => {\r\n                return (\r\n                    <Space>\r\n                        <Link to={`/updatecardinfo/${record.id}`}><Button icon={<EditTwoTone />}></Button></Link>\r\n                        <Popconfirm title={`Are you sure to delete Cerdit Card ${record.cardName} ?`} onConfirm={() => { handleDeleteCreditCard(record.id) }}>\r\n                            <Button icon={<DeleteFilled />} danger></Button>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    let table = (Object.keys(dataSource).length != 0) ? <Table dataSource={dataSource} columns={columns} rowSelection={rowSelection} rowKey='id' onRow={(record) => ({\r\n        onClick: () => {\r\n            selectRow(record);\r\n        },\r\n    })}>\r\n    </Table> : <Empty />\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to={'/AddCreditCard'}><Button className='btn' type='primary'>Add New Card</Button></Link>\r\n            {table}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default CreditCardList","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Billing\\UpdateCreditCard.js",["289","290","291","292","293"],"import { Layout, Form, Typography, Input, Select, DatePicker, Space, Divider, Row, Col, Button } from 'antd'\r\n\r\nimport Options from '../../../../utils/UI/UI_Constants'\r\nimport getOptions from '../../../../utils/UI/SelectOptionsUtil'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MatchParams from '../../../../utils/route/MatchRouteParams'\r\n\r\nimport { getCard, updateCard } from '../../../../actions/BillingActions'\r\n\r\nimport moment from 'moment'\r\n\r\nconst UpdateCreditCard = (props) => {\r\n    let history = useHistory()\r\n    const match = MatchParams(history, '/updatecardinfo/:id')\r\n    const { id } = match.params\r\n    const dispatch = useDispatch()\r\n    const cardInfo = useSelector(state => state.cards.cardInfo)\r\n    const [form] = Form.useForm()\r\n    const [form1] = Form.useForm()\r\n    const { Title } = Typography\r\n    const { Content } = Layout\r\n\r\n    const { creditCardTypes, USstates } = Options\r\n\r\n    const [state, setstate] = useState({})\r\n\r\n    useEffect(() => {\r\n        dispatch(getCard(id))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n        // form.setFieldsValue({ 'expireDate': moment(cardInfo.expireDate) })\r\n        form1.resetFields()\r\n    }, [cardInfo])\r\n\r\n    useEffect(() => {\r\n        if (state.id != null && state.userBilling.id != null) {\r\n            dispatch(updateCard(state, history))\r\n        }\r\n    }, [state])\r\n\r\n    const handleSubmit = () => {\r\n        form.validateFields().then(values => {\r\n            // values.expireDate = values.expireDate ? values.expireDate.format('YYYY-MM-DD') : ''\r\n            values.id = cardInfo.id\r\n            form1.validateFields().then(values1 => {\r\n                values1.id = cardInfo.userBilling.id\r\n                setstate({\r\n                    'cardName': values.cardName,\r\n                    'cardNumber': values.cardNumber,\r\n                    'cvc': values.cvc,\r\n                    // 'expireDate': values.expireDate,\r\n                    'holderName': values.holderName,\r\n                    'id': values.id,\r\n                    'type': values.type,\r\n                    'userBilling': values1\r\n                })\r\n            })\r\n\r\n            // form1.validateFields().then(values => {\r\n            //     values.id = cardInfo.userBilling.id\r\n            //     // setstate({'userBilling': values })\r\n\r\n            //     setstate(prevState => {\r\n            //         return { ...prevState, 'userBilling': values }\r\n            //     })\r\n\r\n            // })\r\n        })\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        history.push('/cardlist')\r\n    }\r\n\r\n    return (\r\n        <Content>\r\n            <Row justify='space-around'>\r\n                <Col span={8} offset={4}>\r\n                    <Divider orientation='left'><Title level={5}>Credit Card Information</Title></Divider>\r\n                    <Form form={form} layout='vertical' wrapperCol={{ span: 24 }} initialValues={cardInfo} onFinish={handleSubmit}>\r\n                        <Form.Item name='cardName' label='Give a name for your card'><Input placeholder='Card Name'></Input></Form.Item>\r\n                        <Form.Item name='type' label='Select Card Type'><Select>{getOptions(creditCardTypes)}</Select></Form.Item>\r\n                        <Form.Item name='holderName' label='Card Holder'><Input placeholder='Card Holder Name'></Input></Form.Item>\r\n                        <Form.Item name='cardNumber' label='Card Number'><Input placeholder='Valid Card Number'></Input></Form.Item>\r\n                        {/* <Form.Item name='expireDate' label='expireDate'><DatePicker></DatePicker></Form.Item> */}\r\n\r\n                        <Space>\r\n                            <Form.Item name='cvc' label='CV Code'><Input></Input></Form.Item>\r\n                        </Space>\r\n                    </Form>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Divider orientation='left'><Title level={5}>Billing Address</Title></Divider>\r\n                    <Form form={form1} layout='vertical' wrapperCol={{ span: 24 }} initialValues={cardInfo.userBilling} onFinish={handleSubmit}>\r\n                        <Form.Item name='userBillingName' label='Name'><Input placeholder='Reciever Name'></Input></Form.Item>\r\n                        <Form.Item name='userBillingStreet1' label='Street Address'><Input placeholder='Street Address 1'></Input></Form.Item>\r\n                        <Form.Item name='userBillingStreet2' label=''><Input placeholder='Street Address 2'></Input></Form.Item>\r\n                        <Space>\r\n                            <Form.Item name='userBillingCity' label='Your City'><Input placeholder='Billing Shipping Address City'></Input></Form.Item>\r\n                            <Form.Item name='userBillingState' label='State'><Select placeholder='Select State'>{getOptions(USstates)}</Select></Form.Item>\r\n                        </Space>\r\n                        <Form.Item name='userBillingZipcode' label='Zipcode'><Input placeholder='zipcode'></Input></Form.Item>\r\n                        <Space>\r\n                            <Button htmlType='submit' type='primary'>Submit</Button>\r\n                            <Button htmlType='button' type='dashed' onClick={handleCancel}>Cancel</Button>\r\n                        </Space>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Content>\r\n    )\r\n}\r\nexport default UpdateCreditCard","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Profile\\Billing\\AddCreditCard.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Book\\BookInfo.js",["294","295"],"import { Row, Col, Typography, Card, Select, Space, Button, Divider } from 'antd'\r\nimport { ShoppingCartOutlined } from '@ant-design/icons'\r\nimport GetImage from '../../common/GetImage'\r\nimport getOptions from '../../../utils/UI/SelectOptionsUtil'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MatchParams from '../../../utils/route/MatchRouteParams'\r\n\r\nimport { getBookDetail } from '../../../actions/bookActions'\r\nimport { addBookToCartItem } from '../../../actions/ShoppingCartActions'\r\n\r\nconst BookInfo = (props) => {\r\n\r\n    let history = useHistory()\r\n    const match = MatchParams(history, '/bookdetail/:id')\r\n\r\n    const { id } = match.params\r\n\r\n    const { Title, Text, Paragraph } = Typography\r\n    const dispatch = useDispatch()\r\n\r\n    const book = useSelector(state => state.books.detail)\r\n\r\n    const [qty, setqty] = useState()\r\n\r\n    useEffect(() => {\r\n        dispatch(getBookDetail(id))\r\n    }, [])\r\n\r\n    const onChangeOption = (value) => {\r\n        setqty(value)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const data = { book: book, qty: qty }\r\n        dispatch(addBookToCartItem(data, history))\r\n    }\r\n\r\n    return (\r\n        <Row justify='space-between'>\r\n            <Col xs={{ span: 24 }} xl={{ span: 6 }} offset={1}>\r\n                <GetImage id={id} width='300px' height='300px'></GetImage>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} xl={{ span: 16 }}>\r\n                <Title>{book.title}</Title>\r\n                <Divider></Divider>\r\n                <Row justify='start'>\r\n                    <Col xs={{ span: 12 }} xl={{ span: 6 }} className='block-text'>\r\n                        <Text><strong>Author: </strong>{book.author}</Text>\r\n                        <Text><strong>Publisher: </strong>{book.publisher}</Text>\r\n                        <Text><strong>Publication Date: </strong>{book.publicationDate}</Text>\r\n                        <Text><strong>Language: </strong>{book.language}</Text>\r\n                        <Text><strong>Category: </strong>{book.category}</Text>\r\n                        <Text><strong>Pages: </strong>{book.numberOfPages}</Text>\r\n                    </Col>\r\n                    <Col xs={{ span: 12 }} xl={{ span: 6 }} className='block-text'>\r\n                        <Text><strong>Format: </strong>{book.format}</Text>\r\n                        <Text><strong>ISBN: </strong>{book.isbn}</Text>\r\n                        <Text><strong>Shipping Weight: </strong>{book.shippingWeight}</Text>\r\n                        <Text><strong>List Price: </strong>{book.listPrice}</Text>\r\n                        <Text><strong>Our Price: </strong>{book.ourPrice}</Text>\r\n                        <Text><strong>Number in Stock: </strong>{book.inStockNumber}</Text>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Card style={{ borderColor: '#57a8e9', outline: 0, boxShadow: '0 0 0 2px rgba(87,168,233, .2)' }} bordered={true} hoverable bodyStyle={{ backgroundColor: '#f0f5f5' }}>\r\n                            <div>Our Price  {book.ourPrice}</div>\r\n                            <div>List Price {book.listPrice}</div>\r\n                            <div> You save  {(book.listPrice - book.ourPrice).toFixed(2)}</div>\r\n                            <Divider></Divider>\r\n                            <Space>\r\n                                <Select onChange={onChangeOption} placeholder='Qty'>{getOptions([1, 2, 3, 4, 5, 6])}</Select>\r\n                                <Button htmlType='submit' onClick={handleSubmit} icon={<ShoppingCartOutlined />} type='primary'>Add to cart</Button>\r\n                            </Space>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Divider></Divider>\r\n                <Text strong>{book.description}</Text>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default BookInfo;","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Book\\BookList.js",["296","297"],"import { Empty, List, Card, Rate, Tag } from 'antd'\r\n\r\nimport GetImage from '../../common/GetImage'\r\nimport UI_Constants from '../../../utils/UI/UI_Constants'\r\n\r\nimport { Fragment, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getAllBook } from '../../../actions/bookActions'\r\n\r\nconst BookList = () => {\r\n\r\n    const { tagColors } = UI_Constants\r\n    const dispatch = useDispatch()\r\n    const dataSource = useSelector(state => state.books.books)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllBook())\r\n    }, [])\r\n\r\n    let bookList = (Object.keys(dataSource).length != 0) ?\r\n        <List\r\n            grid={{\r\n                gutter: 12,\r\n                xs: 1,\r\n                sm: 2,\r\n                md: 3,\r\n                lg: 3,\r\n                xl: 3,\r\n                xxl: 3,\r\n            }}\r\n            dataSource={dataSource}\r\n            renderItem={item => (\r\n                <List.Item>\r\n                    <Card\r\n                        style={{ width: 300 }}\r\n                        cover={\r\n                            <GetImage id={item.id} height='250px'></GetImage>\r\n                        }\r\n                    >\r\n                        <div><Link to={`/bookdetail/${item.id}`}><h4>{item.title}</h4></Link></div>\r\n                        <Rate value={5}></Rate>\r\n                        <div><Tag color={tagColors[item.category]}>{item.category}</Tag></div>\r\n                        <h4 className=\"price\">${item.ourPrice}</h4>\r\n                    </Card>\r\n                </List.Item>\r\n            )}\r\n        /> :\r\n        <Empty />\r\n\r\n    return (\r\n        <Fragment>\r\n            {bookList}\r\n        </Fragment>\r\n\r\n    )\r\n}\r\nexport default BookList","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\security\\Roles.js",["298"],"export default {\r\n    Role_ADMIN: 'Role_ADMIN',\r\n    Role_USER: 'Role_USER',\r\n};","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Admin\\Book\\AddBook.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Admin\\Book\\BookList.js",["299","300"],"import { Table, Space, Button, Empty, Popconfirm } from 'antd'\r\nimport { DeleteFilled, EditTwoTone, ShoppingTwoTone } from '@ant-design/icons'\r\nimport message from '../../common/message'\r\nimport GetImage from '../../common/GetImage'\r\n\r\nimport { Fragment, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getAllBook, deleteBook } from '../../../actions/bookActions'\r\n\r\nconst BookList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const dataSource = useSelector(state => state.books.books)\r\n    const errors = useSelector(state => state.error.errors)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllBook())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (errors.deleteBook) {\r\n            message('error', errors.deleteBook)\r\n        }\r\n    }, [errors])\r\n\r\n\r\n    const handleDeleteBook = (bookId) => {\r\n        dispatch(deleteBook(bookId))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '',\r\n            dataIndex: '',\r\n            render: (text, record) => {\r\n                return (<GetImage id={record.id} width='100px' height='100px'></GetImage>)\r\n            }\r\n        },\r\n        {\r\n            title: 'title',\r\n            dataIndex: 'title',\r\n            key: 'title'\r\n        },\r\n        {\r\n            title: 'author',\r\n            dataIndex: 'author',\r\n            key: 'author'\r\n        },\r\n        {\r\n            title: 'category',\r\n            dataIndex: 'category',\r\n            key: 'category'\r\n        },\r\n        {\r\n            title: 'List Price',\r\n            dataIndex: 'listPrice',\r\n            key: 'listPrice'\r\n        },\r\n        {\r\n            title: 'Our Price',\r\n            dataIndex: 'ourPrice',\r\n            key: 'ourPrice'\r\n        },\r\n        {\r\n            title: 'active',\r\n            dataIndex: 'active',\r\n            render: (text, record) => {\r\n                if (record.active)\r\n                    return (<span>Yes</span>)\r\n                else return (<span>No</span>)\r\n            }\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            render: (text, record) => {\r\n                return (\r\n                    <Space>\r\n                        <Link to={`/updatebook/${record.id}`}><Button icon={<EditTwoTone />}></Button></Link>\r\n                        <Popconfirm title={`Are you sure to delete ${record.title} ?`} onConfirm={() => { handleDeleteBook(record.id) }}>\r\n                            <Button icon={<DeleteFilled />} danger></Button>\r\n                        </Popconfirm>\r\n                        <Link to={`/bookdetail/${record.id}`}><Button icon={<ShoppingTwoTone />}></Button></Link>\r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    let table = (Object.keys(dataSource).length != 0) ? <Table dataSource={dataSource} columns={columns} rowKey='id'></Table> : <Empty />\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to={'/addbook'}><Button className='btn' type='primary'>Add New Book</Button></Link>\r\n            {table}\r\n        </Fragment>\r\n\r\n    )\r\n}\r\nexport default BookList","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\Admin\\Book\\UpdateBook.js",["301","302","303","304"],"import { Form, Input, InputNumber, Button, Select, Space, Radio, Upload } from 'antd'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport message from '../../common/message'\r\n\r\nimport Options from '../../../utils/UI/UI_Constants'\r\nimport getOptions from '../../../utils/UI/SelectOptionsUtil';\r\nimport getImage from '../../../utils/UI/ImageUtils'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MatchParams from '../../../utils/route/MatchRouteParams'\r\n\r\nimport { getBookDetail, createNewBook } from '../../../actions/bookActions'\r\n\r\nimport moment from 'moment'\r\n\r\n\r\nconst UpdateBook = (props) => {\r\n\r\n    let history = useHistory()\r\n    const match = MatchParams(history, '/updatebook/:id')\r\n\r\n    const { id } = match.params\r\n    const [form] = Form.useForm()\r\n\r\n    const { category, format, language } = Options\r\n\r\n    const [imageLoading, setImageLoading] = useState(false);\r\n    const [imageBase64Value, setImageBase64Value] = useState(null);\r\n    const [img, setimg] = useState()\r\n    const dispatch = useDispatch()\r\n    const book = useSelector(state => state.books.detail)\r\n    const errors = useSelector(state => state.error.errors)\r\n\r\n\r\n    useEffect(() => {\r\n        getImage(id)\r\n            .then(result => {\r\n                setimg([{ url: result.data }])\r\n                setImageBase64Value(result.data)\r\n            })\r\n        dispatch(getBookDetail(id))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(book).length != 0) {\r\n            // book.publicationDate = moment(book.publicationDate)\r\n            form.resetFields()\r\n            // form.setFieldsValue({ 'publicationDate': moment(book.publicationDate) })\r\n        }\r\n    }, [book])\r\n\r\n    useEffect(() => {\r\n        if (errors.getBookDetail) {\r\n            message('error', errors.getBookDetail)\r\n        }\r\n    }, [errors])\r\n\r\n    const handleUpdate = () => {\r\n        form.validateFields()\r\n            .then(values => {\r\n                // values['publicationDate'] = values['publicationDate'] ? values['publicationDate'].format('YYYY-MM-DD') : ''\r\n                values['bookImage'] = imageBase64Value\r\n                values.id = book.id\r\n                dispatch(createNewBook(values, history))\r\n            })\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        history.push('/booklist')\r\n    }\r\n\r\n    const handleImageUpload = (info) => {\r\n        const { file } = info;\r\n\r\n        if (file.status === \"uploading\") {\r\n            setImageLoading(true);\r\n            return;\r\n        }\r\n\r\n        if (file.originFileObj) {\r\n            getBase64Value(file.originFileObj, imageBase64Value => {\r\n                setImageBase64Value(imageBase64Value);\r\n                setImageLoading(false);\r\n            });\r\n        }\r\n    };\r\n\r\n    const getBase64Value = (img, callback) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(img);\r\n        reader.onload = () => {\r\n            callback(reader.result);\r\n        };\r\n    };\r\n\r\n    const beforeImageUpload = (file) => {\r\n        const fileIsValidImage = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n        const fileIsValidSize = file.size / 1024 / 1024 < 1;\r\n\r\n        if (!fileIsValidImage) {\r\n            //   displayErrorMessage(\"You're only able to upload valid JPG or PNG files!\");\r\n            return false;\r\n        }\r\n\r\n        if (!fileIsValidSize) {\r\n            //   displayErrorMessage(\r\n            //     \"You're only able to upload valid image files of under 1MB in size!\"\r\n            //   );\r\n            return false;\r\n        }\r\n\r\n        return fileIsValidImage && fileIsValidSize;\r\n    };\r\n\r\n\r\n    return (\r\n        <Form form={form} initialValues={book} onFinish={handleUpdate} wrapperCol={{ span: 8 }} labelCol={{ span: 8 }}>\r\n            <Form.Item name='title' label='title'><Input></Input></Form.Item>\r\n            <Form.Item name='author' label='author'><Input></Input></Form.Item>\r\n            <Form.Item name='publisher' label='publisher'><Input></Input></Form.Item>\r\n            {/* <Form.Item name='publicationDate' label='publicationDate'><DatePicker  dateFormatCalendar=\"\"></DatePicker></Form.Item> */}\r\n            <Form.Item name='language' label='language'>\r\n                <Select>\r\n                    {\r\n                        getOptions(language)\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item name='category' label='category'>\r\n                <Select>\r\n                    {\r\n                        getOptions(category)\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item name='numberOfPages' label='numberOfPages'><InputNumber></InputNumber></Form.Item>\r\n            <Form.Item name='format' label='format'>\r\n                <Select>\r\n                    {\r\n                        getOptions(format)\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item name='isbn' label='isbn'><Input></Input></Form.Item>\r\n            <Form.Item name='shippingWeight' label='shippingWeight'><Input></Input></Form.Item>\r\n            <Form.Item name='listPrice' label='listPrice'><InputNumber></InputNumber></Form.Item>\r\n            <Form.Item name='ourPrice' label='ourPrice'><InputNumber></InputNumber></Form.Item>\r\n            <Form.Item name='inStockNumber' label='inStockNumber'><InputNumber></InputNumber></Form.Item>\r\n            <Form.Item name='bookImage' label='upload book image'>\r\n                <Upload.Dragger\r\n                    maxCount={1}\r\n                    name=\"bookImage\"\r\n                    listType=\"picture-card\"\r\n                    fileList={img}\r\n                    // showUploadList={false}\r\n                    action=\"#\"\r\n                    beforeUpload={beforeImageUpload}\r\n                    onChange={handleImageUpload}>\r\n\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        {imageLoading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Click or drag image to this area to upload</p>\r\n                </Upload.Dragger>\r\n            </Form.Item>\r\n            <Form.Item name='description' label='description'><Input.TextArea></Input.TextArea></Form.Item>\r\n            <Form.Item name='active' label='active'>\r\n                <Radio.Group>\r\n                    <Radio value={true}>Active</Radio>\r\n                    <Radio value={false}>Inactive</Radio>\r\n                </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ offset: 8 }}>\r\n                <Space>\r\n                    <Button htmlType='submit' type='primary'>Submit</Button>\r\n                    <Button htmlType='button' type='dashed' onClick={handleCancel}>Cancel</Button>\r\n                </Space>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nexport default UpdateBook;","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\OrderActions.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\ShoppingCartActions.js",["305"],"import axios from 'axios'\r\nimport urls from '../utils/APIConfig'\r\nimport types from '../utils/ActionTypes'\r\n\r\nconst { Add_BOOK_TO_CART_ITEM_URL, GET_SHOPPING_CART_ITEMS_URL, DELETE_ITEM_URL } = urls\r\nconst { Add_BOOK_TO_CART_ITEM, GET_SHOPPING_CART_ITEMS, DELETE_ITEM } = types\r\n\r\nexport const addBookToCartItem = (data, history) => dispatch => {\r\n    axios.post(Add_BOOK_TO_CART_ITEM_URL, data)\r\n        .then(result => {\r\n            history.push('/shoppingCart')\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const getShoppingCart = () => dispatch => {\r\n    axios.get(GET_SHOPPING_CART_ITEMS_URL)\r\n        .then(result => {\r\n            dispatch({\r\n                type: GET_SHOPPING_CART_ITEMS,\r\n                payload: result.data\r\n            })\r\n        }).catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const removeItem = (id) => dispatch => {\r\n    axios.delete(DELETE_ITEM_URL + id)\r\n        .then(result => {\r\n            dispatch({\r\n                type: DELETE_ITEM,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\ShippingActions.js",["306","307"],"import axios from \"axios\"\r\nimport urls from '../utils/APIConfig'\r\nimport types from '../utils/ActionTypes'\r\n\r\nconst { ADD_USHIPPING_URL, GET_USER_SHIPPINGS_URL, USER_SHIPPING_DETAIL_URL, UPDATE_USER_SHIPPING_URL, DELETE_USER_SHIPPING_URL, GET_DEFAULT_USER_SHIPPING_URL, SET_DEFAULT_USER_SHIPPING_URL } = urls\r\nconst { NEW_USER_SHIPPING, GET_USER_SHIPPINGS, GET_SHIPPING_INFO, UPDATE_USER_SHIPPING, DELETE_USER_SHIPPING_ADDRESS, GET_DEFAULT_USER_SHIPPING } = types\r\n\r\nexport const addUserShipping = (shipping, history) => dispatch => {\r\n    axios.post(ADD_USHIPPING_URL, shipping, { headers: { 'dataType': \"json\", 'Content-Type': 'application/json', } })\r\n        .then(result => {\r\n            history.push('/ShippingList')\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const getUserShipping = () => dispatch => {\r\n    axios.get(GET_USER_SHIPPINGS_URL)\r\n        .then(result => {\r\n            dispatch({\r\n                type: GET_USER_SHIPPINGS,\r\n                payload: result.data\r\n            })\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const getUserShippingInfo = (id) => dispatch => {\r\n    axios.get(USER_SHIPPING_DETAIL_URL + id)\r\n        .then(result => {\r\n            dispatch({\r\n                type: GET_SHIPPING_INFO,\r\n                payload: result.data\r\n            })\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const updateUserShippingInfo = (shipping, history) => dispatch => {\r\n    axios.post(UPDATE_USER_SHIPPING_URL, shipping, { headers: { 'dataType': \"json\", 'Content-Type': 'application/json', } })\r\n        .then(result => {\r\n            history.push('/ShippingList')\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const deleteUserShipping = (id) => dispatch => {\r\n    axios.delete(DELETE_USER_SHIPPING_URL + id)\r\n        .then(result => {\r\n            dispatch({\r\n                type: DELETE_USER_SHIPPING_ADDRESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const getDefaultUserShipping = () => dispatch => {\r\n    axios.get(GET_DEFAULT_USER_SHIPPING_URL)\r\n        .then(result => {\r\n            dispatch({\r\n                type: GET_DEFAULT_USER_SHIPPING,\r\n                payload: result.data\r\n            })\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const setDefaultUserShipping = (id) => dispatch => {\r\n    axios.get(SET_DEFAULT_USER_SHIPPING_URL + id)\r\n        .then(result => {\r\n\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\route\\MatchRouteParams.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\common\\GetImage.js",["308"],"import { Image } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport getImage from '../../utils/UI/ImageUtils'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst GetImage = ({ id, width, height }) => {\r\n\r\n    const [img, setimg] = useState()\r\n    const [imageLoading, setImageLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getImage(id)\r\n            .then(result => {\r\n                console.log(result.data);\r\n                setimg(result.data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setImageLoading(false)\r\n    }, [img])\r\n\r\n    return (\r\n        <Image src={imageLoading ? <LoadingOutlined /> : img} width={width} height={height}></Image>\r\n    )\r\n}\r\n\r\nexport default GetImage","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\UI\\SelectOptionsUtil.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\UI\\UI_Constants.js",["309"],"export default {\r\n    category: ['Management', 'Fiction', 'Engineering', 'Programming', 'Arts'],\r\n    format: ['paperback', 'hardcover'],\r\n    language: ['English', 'Spanish'],\r\n    creditCardTypes: ['visa', 'mastercard', 'discover', 'amex'],\r\n    USstates: ['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA'],\r\n    tagColors: {\r\n        'Management': '#108ee9',\r\n        'Fiction': '#2db7f5',\r\n        'Engineering': '#87d068',\r\n        'Programming': 'cyan',\r\n        'Arts': '#f50'\r\n    }\r\n}","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\BillingActions.js",["310"],"import axios from 'axios'\r\nimport urls from '../utils/APIConfig'\r\nimport types from '../utils/ActionTypes'\r\n\r\nconst { ADD_CARD_URL, CARD_LIST_URL, DELETE_CARD_URL, CARD_DETAIL_URL, UPDATE_CARD_URL, GET_DEFAULT_CARD_URL, SET_DEFAULT_CARD_URL } = urls\r\nconst { NewCardAndUserBilling, GET_CREDIT_CARD_LIST, DELETE_CARD, GET_CARD_DETAIL, GET_DEFAULT_CARD } = types\r\n\r\nexport const newCard = (data, history) => dispatch => {\r\n    axios.post(ADD_CARD_URL, data)\r\n        .then(result => {\r\n            history.push('/cardlist')\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const cardList = () => dispatch => {\r\n\r\n    axios.get(CARD_LIST_URL)\r\n        .then(result => {\r\n            dispatch({\r\n                type: GET_CREDIT_CARD_LIST,\r\n                payload: result.data\r\n            })\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const deletCard = (cardID) => dispatch => {\r\n    axios.delete(DELETE_CARD_URL + cardID)\r\n        .then(result => {\r\n            dispatch({\r\n                type: DELETE_CARD,\r\n                payload: cardID\r\n            })\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const getCard = (cardId) => dispatch => {\r\n    axios.get(CARD_DETAIL_URL + cardId)\r\n        .then(result => {\r\n            dispatch({\r\n                type: GET_CARD_DETAIL,\r\n                payload: result.data\r\n            })\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const updateCard = (card, history) => dispatch => {\r\n    axios.post(UPDATE_CARD_URL, card, { headers: { 'dataType': \"json\", 'Content-Type': 'application/json', } })\r\n        .then(result => {\r\n            history.push('/cardlist')\r\n        })\r\n        .catch(reason => {\r\n        })\r\n}\r\n\r\nexport const getDefaultCard = () => dispatch => {\r\n    axios.get(GET_DEFAULT_CARD_URL)\r\n        .then(result => {\r\n            dispatch({\r\n                type: GET_DEFAULT_CARD,\r\n                payload: result.data\r\n            })\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}\r\n\r\nexport const setDefaultCard = (id) => dispatch => {\r\n    axios.get(SET_DEFAULT_CARD_URL + id)\r\n        .then(result => {\r\n\r\n        })\r\n        .catch(reason => {\r\n\r\n        })\r\n}","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\actions\\bookActions.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\utils\\UI\\ImageUtils.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\common\\message.js",["311"],"import { message } from 'antd'\r\n\r\nexport default (type, m) => {\r\n    switch (type) {\r\n        case 'error':\r\n            return message.error(m)\r\n\r\n        default:\r\n            break;\r\n    }\r\n}","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Checkout\\PlaceOrder.js",[],"C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Checkout\\PaymentInformation.js",["312","313","314","315"],"import { Layout, Form, Input, Select, DatePicker, Space, Row, Col } from 'antd'\r\n\r\nimport Options from '../../../utils/UI/UI_Constants'\r\nimport getOptions from '../../../utils/UI/SelectOptionsUtil'\r\n\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getDefaultCard } from '../../../actions/BillingActions'\r\n\r\nimport moment from 'moment'\r\n\r\nconst PaymentInformation = () => {\r\n    const dispatch = useDispatch()\r\n    const cardInfo = useSelector(state => state.cards.defaultCard)\r\n    const { creditCardTypes } = Options\r\n    const [form] = Form.useForm()\r\n    const { Content } = Layout\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getDefaultCard())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n        // form.setFieldsValue({ 'expireDate': moment(cardInfo.expireDate) })\r\n    }, [cardInfo])\r\n\r\n    return (\r\n        <Content>\r\n            <Form form={form} layout='vertical' wrapperCol={{ span: 24 }} initialValues={cardInfo}>\r\n                <Row justify='start'>\r\n                    <Col span={8}>\r\n                        <Space>\r\n                            <Form.Item name='cardName' label='Card Name'><Input placeholder='Card Name'></Input></Form.Item>\r\n                            <Form.Item name='type' label='Card Type'><Select>{getOptions(creditCardTypes)}</Select></Form.Item>\r\n                        </Space>\r\n                        <Space>\r\n                            <Form.Item name='holderName' label='Card Holder'><Input placeholder='Card Holder Name'></Input></Form.Item>\r\n                            <Form.Item name='cardNumber' label='Card Number'><Input placeholder='Valid Card Number'></Input></Form.Item>\r\n                        </Space>\r\n                        <Space>\r\n                            <Form.Item name='cvc' label='CV Code'><Input></Input></Form.Item>\r\n                            {/* <Form.Item name='expireDate' label='expireDate'><DatePicker></DatePicker></Form.Item> */}\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default PaymentInformation;","C:\\Users\\bongu\\Desktop\\React\\bookstore-react-client\\src\\components\\User\\Checkout\\ShippingAddress.js",["316","317"],"import { Layout, Form, Input, Select, Space, Row, Col } from 'antd'\r\n\r\nimport Options from '../../../utils/UI/UI_Constants'\r\nimport getOptions from '../../../utils/UI/SelectOptionsUtil'\r\n\r\nimport { getDefaultUserShipping } from '../../../actions/ShippingActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect } from 'react'\r\n\r\nconst ShippingAddress = () => {\r\n    const dispatch = useDispatch()\r\n    const [form] = Form.useForm()\r\n    const { Content } = Layout\r\n    const shippingInfo = useSelector(state => state.userShippings.defaultShipping)\r\n    const { USstates } = Options\r\n\r\n    useEffect(() => {\r\n        dispatch(getDefaultUserShipping())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n    }, [shippingInfo])\r\n\r\n    return (\r\n        <Content>\r\n            <Form form={form} layout='vertical' wrapperCol={{ span: 24 }} initialValues={shippingInfo}>\r\n                <Row justify='start'>\r\n                    <Col span={8}>\r\n                        <Form.Item name='userShippingName' label='Name'><Input placeholder='Reciever Name'></Input></Form.Item>\r\n                        <Form.Item name='userShippingStreet1' label='Street Address'><Input placeholder='Street Address 1'></Input></Form.Item>\r\n                        <Form.Item name='userShippingStreet2' label=''><Input placeholder='Street Address 2'></Input></Form.Item>\r\n                        <Space>\r\n                            <Form.Item name='userShippingCity' label='Your City'><Input placeholder='Shipping City'></Input></Form.Item>\r\n                            <Form.Item name='userShippingState' label='State'><Select placeholder='Select State'>{getOptions(USstates)}</Select></Form.Item>\r\n                            <Form.Item name='userShippingZipcode' label='Zipcode'><Input placeholder='zipcode'></Input></Form.Item>\r\n\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ShippingAddress;",["318","319"],{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","severity":1,"message":"325","line":1,"column":1,"nodeType":"326","endLine":22,"endColumn":2},{"ruleId":"324","severity":1,"message":"327","line":5,"column":1,"nodeType":"326","endLine":22,"endColumn":2},{"ruleId":"328","severity":1,"message":"329","line":7,"column":31,"nodeType":"330","messageId":"331","endLine":7,"endColumn":44},{"ruleId":"324","severity":1,"message":"327","line":22,"column":1,"nodeType":"326","endLine":119,"endColumn":2},{"ruleId":"324","severity":1,"message":"325","line":43,"column":1,"nodeType":"326","endLine":83,"endColumn":2},{"ruleId":"328","severity":1,"message":"332","line":1,"column":54,"nodeType":"330","messageId":"331","endLine":1,"endColumn":58},{"ruleId":"333","severity":1,"message":"334","line":19,"column":6,"nodeType":"335","endLine":19,"endColumn":27,"suggestions":"336"},{"ruleId":"333","severity":1,"message":"337","line":19,"column":6,"nodeType":"335","endLine":19,"endColumn":8,"suggestions":"338"},{"ruleId":"333","severity":1,"message":"339","line":17,"column":8,"nodeType":"335","endLine":17,"endColumn":10,"suggestions":"340"},{"ruleId":"341","severity":1,"message":"342","line":82,"column":51,"nodeType":"343","messageId":"344","endLine":82,"endColumn":53},{"ruleId":"333","severity":1,"message":"339","line":15,"column":8,"nodeType":"335","endLine":15,"endColumn":10,"suggestions":"345"},{"ruleId":"341","severity":1,"message":"342","line":42,"column":45,"nodeType":"343","messageId":"344","endLine":42,"endColumn":47},{"ruleId":"333","severity":1,"message":"346","line":27,"column":8,"nodeType":"335","endLine":27,"endColumn":10,"suggestions":"347"},{"ruleId":"333","severity":1,"message":"348","line":31,"column":8,"nodeType":"335","endLine":31,"endColumn":22,"suggestions":"349"},{"ruleId":"333","severity":1,"message":"339","line":17,"column":8,"nodeType":"335","endLine":17,"endColumn":10,"suggestions":"350"},{"ruleId":"333","severity":1,"message":"351","line":26,"column":31,"nodeType":"335","endLine":26,"endColumn":51},{"ruleId":"341","severity":1,"message":"342","line":99,"column":49,"nodeType":"343","messageId":"344","endLine":99,"endColumn":51},{"ruleId":"333","severity":1,"message":"339","line":21,"column":8,"nodeType":"335","endLine":21,"endColumn":10,"suggestions":"352"},{"ruleId":"333","severity":1,"message":"351","line":25,"column":31,"nodeType":"335","endLine":25,"endColumn":47},{"ruleId":"341","severity":1,"message":"342","line":95,"column":49,"nodeType":"343","messageId":"344","endLine":95,"endColumn":51},{"ruleId":"328","severity":1,"message":"353","line":1,"column":51,"nodeType":"330","messageId":"331","endLine":1,"endColumn":61},{"ruleId":"328","severity":1,"message":"354","line":13,"column":8,"nodeType":"330","messageId":"331","endLine":13,"endColumn":14},{"ruleId":"333","severity":1,"message":"346","line":32,"column":8,"nodeType":"335","endLine":32,"endColumn":10,"suggestions":"355"},{"ruleId":"333","severity":1,"message":"356","line":38,"column":8,"nodeType":"335","endLine":38,"endColumn":18,"suggestions":"357"},{"ruleId":"333","severity":1,"message":"358","line":44,"column":8,"nodeType":"335","endLine":44,"endColumn":15,"suggestions":"359"},{"ruleId":"328","severity":1,"message":"360","line":21,"column":26,"nodeType":"330","messageId":"331","endLine":21,"endColumn":35},{"ruleId":"333","severity":1,"message":"346","line":30,"column":8,"nodeType":"335","endLine":30,"endColumn":10,"suggestions":"361"},{"ruleId":"333","severity":1,"message":"339","line":20,"column":8,"nodeType":"335","endLine":20,"endColumn":10,"suggestions":"362"},{"ruleId":"341","severity":1,"message":"342","line":22,"column":52,"nodeType":"343","messageId":"344","endLine":22,"endColumn":54},{"ruleId":"324","severity":1,"message":"325","line":1,"column":1,"nodeType":"326","endLine":4,"endColumn":3},{"ruleId":"333","severity":1,"message":"339","line":20,"column":8,"nodeType":"335","endLine":20,"endColumn":10,"suggestions":"363"},{"ruleId":"341","severity":1,"message":"342","line":92,"column":49,"nodeType":"343","messageId":"344","endLine":92,"endColumn":51},{"ruleId":"328","severity":1,"message":"354","line":16,"column":8,"nodeType":"330","messageId":"331","endLine":16,"endColumn":14},{"ruleId":"333","severity":1,"message":"346","line":44,"column":8,"nodeType":"335","endLine":44,"endColumn":10,"suggestions":"364"},{"ruleId":"341","severity":1,"message":"342","line":47,"column":38,"nodeType":"343","messageId":"344","endLine":47,"endColumn":40},{"ruleId":"333","severity":1,"message":"348","line":52,"column":8,"nodeType":"335","endLine":52,"endColumn":14,"suggestions":"365"},{"ruleId":"328","severity":1,"message":"366","line":6,"column":9,"nodeType":"330","messageId":"331","endLine":6,"endColumn":30},{"ruleId":"328","severity":1,"message":"367","line":6,"column":9,"nodeType":"330","messageId":"331","endLine":6,"endColumn":26},{"ruleId":"328","severity":1,"message":"368","line":6,"column":67,"nodeType":"330","messageId":"331","endLine":6,"endColumn":87},{"ruleId":"333","severity":1,"message":"369","line":17,"column":8,"nodeType":"335","endLine":17,"endColumn":10,"suggestions":"370"},{"ruleId":"324","severity":1,"message":"325","line":1,"column":1,"nodeType":"326","endLine":14,"endColumn":2},{"ruleId":"328","severity":1,"message":"371","line":6,"column":9,"nodeType":"330","messageId":"331","endLine":6,"endColumn":30},{"ruleId":"324","severity":1,"message":"372","line":3,"column":1,"nodeType":"326","endLine":11,"endColumn":2},{"ruleId":"328","severity":1,"message":"353","line":1,"column":39,"nodeType":"330","messageId":"331","endLine":1,"endColumn":49},{"ruleId":"328","severity":1,"message":"354","line":11,"column":8,"nodeType":"330","messageId":"331","endLine":11,"endColumn":14},{"ruleId":"333","severity":1,"message":"339","line":23,"column":8,"nodeType":"335","endLine":23,"endColumn":10,"suggestions":"373"},{"ruleId":"333","severity":1,"message":"348","line":28,"column":8,"nodeType":"335","endLine":28,"endColumn":18,"suggestions":"374"},{"ruleId":"333","severity":1,"message":"339","line":19,"column":8,"nodeType":"335","endLine":19,"endColumn":10,"suggestions":"375"},{"ruleId":"333","severity":1,"message":"348","line":23,"column":8,"nodeType":"335","endLine":23,"endColumn":22,"suggestions":"376"},{"ruleId":"320","replacedBy":"377"},{"ruleId":"322","replacedBy":"378"},"no-native-reassign",["379"],"no-negated-in-lhs",["380"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","no-unused-vars","'isAddNotFound' is assigned a value but never used.","Identifier","unusedVar","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["381"],"React Hook useEffect has missing dependencies: 'history' and 'security.validToken'. Either include them or remove the dependency array.",["382"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["383"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["384"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["385"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["386"],["387"],"Assignments to the 'selectedRowKeys' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["388"],"'DatePicker' is defined but never used.","'moment' is defined but never used.",["389"],"React Hook useEffect has missing dependencies: 'form' and 'form1'. Either include them or remove the dependency array.",["390"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["391"],"'Paragraph' is assigned a value but never used.",["392"],["393"],["394"],["395"],["396"],"'Add_BOOK_TO_CART_ITEM' is assigned a value but never used.","'NEW_USER_SHIPPING' is assigned a value but never used.","'UPDATE_USER_SHIPPING' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["397"],"'NewCardAndUserBilling' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default",["398"],["399"],["400"],["401"],["379"],["380"],"no-global-assign","no-unsafe-negation",{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"406","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"406","fix":"413"},{"desc":"406","fix":"414"},{"desc":"409","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"409","fix":"420"},{"desc":"406","fix":"421"},{"desc":"406","fix":"422"},{"desc":"409","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"406","fix":"428"},{"desc":"429","fix":"430"},{"desc":"406","fix":"431"},{"desc":"411","fix":"432"},"Update the dependencies array to be: [props.history, security.validToken]",{"range":"433","text":"434"},"Update the dependencies array to be: [history, security.validToken]",{"range":"435","text":"436"},"Update the dependencies array to be: [dispatch]",{"range":"437","text":"438"},{"range":"439","text":"438"},"Update the dependencies array to be: [dispatch, id]",{"range":"440","text":"441"},"Update the dependencies array to be: [form, shippingInfo]",{"range":"442","text":"443"},{"range":"444","text":"438"},{"range":"445","text":"438"},{"range":"446","text":"441"},"Update the dependencies array to be: [cardInfo, form, form1]",{"range":"447","text":"448"},"Update the dependencies array to be: [dispatch, history, state]",{"range":"449","text":"450"},{"range":"451","text":"441"},{"range":"452","text":"438"},{"range":"453","text":"438"},{"range":"454","text":"441"},"Update the dependencies array to be: [book, form]",{"range":"455","text":"456"},"Update the dependencies array to be: [id]",{"range":"457","text":"458"},{"range":"459","text":"438"},"Update the dependencies array to be: [cardInfo, form]",{"range":"460","text":"461"},{"range":"462","text":"438"},{"range":"463","text":"443"},[520,541],"[props.history, security.validToken]",[540,542],"[history, security.validToken]",[571,573],"[dispatch]",[402,404],[1038,1040],"[dispatch, id]",[1103,1117],"[form, shippingInfo]",[546,548],[736,738],[1128,1130],[1301,1311],"[cardInfo, form, form1]",[1472,1479],"[dispatch, history, state]",[1022,1024],[599,601],[706,708],[1514,1516],[1797,1803],"[book, form]",[509,511],"[id]",[711,713],[855,865],"[cardInfo, form]",[687,689],[752,766]]